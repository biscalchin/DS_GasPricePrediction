Search.setIndex({"docnames": ["analysis", "artificial_neural_network", "conf", "data_scraper", "decision_tree_regression", "designer", "forecaster", "index", "linear_Regression", "modules", "polynomial_Regression", "progress_bar", "random_forest"], "filenames": ["analysis.rst", "artificial_neural_network.rst", "conf.rst", "data_scraper.rst", "decision_tree_regression.rst", "designer.rst", "forecaster.rst", "index.rst", "linear_Regression.rst", "modules.rst", "polynomial_Regression.rst", "progress_bar.rst", "random_forest.rst"], "titles": ["analysis module", "artificial_neural_network module", "conf module", "data_scraper module", "decision_tree_regression module", "designer module", "forecaster module", "Welcome to Gas Price Prediction\u2019s documentation!", "linear_Regression module", "DS_GasPricePrediction", "polynomial_Regression module", "progress_bar module", "random_forest module"], "terms": {"class": [1, 4, 11, 12], "improvedneuralnetwork": [1, 9], "layer_s": [1, 5], "learning_r": [1, 8], "0": [1, 6, 11], "01": 1, "epoch": 1, "1000": 1, "sourc": [1, 3, 4, 5, 6, 8, 10, 11, 12], "base": [1, 3, 4, 6, 11, 12], "object": [1, 4, 5, 11, 12], "A": [1, 3, 6, 11], "neural": [1, 5], "network": [1, 5], "implement": [1, 4], "regress": [1, 4, 6, 12], "task": [1, 11], "leaki": 1, "relu": [1, 9], "activ": 1, "gradient": 1, "descent": 1, "optim": 1, "attribut": [1, 11], "list": [1, 5, 6, 12], "size": 1, "each": [1, 5, 12], "layer": [1, 5], "float": [1, 3, 5, 6, 11], "learn": 1, "rate": 1, "int": [1, 5, 11], "number": [1, 3, 5], "train": [1, 4, 6, 9, 12], "weight": 1, "The": [1, 3, 4, 6, 8, 11, 12], "matric": 1, "bias": 1, "vector": 1, "loss_histori": 1, "histori": 1, "loss": 1, "valu": [1, 3, 4, 6, 8, 11, 12], "dure": 1, "backward": [1, 9], "z": 1, "y": [1, 4, 12], "perform": [1, 8], "propag": 1, "through": [1, 11], "paramet": [1, 3, 4, 5, 6, 8, 11, 12], "linear": [1, 4, 6, 12], "combin": [1, 6], "calcul": [1, 6], "forward": [1, 9], "pass": [1, 6], "actual": 1, "target": [1, 4, 12], "return": [1, 3, 4, 6, 8, 12], "nabla_w": 1, "partial": 1, "deriv": 1, "cost": 1, "function": [1, 3, 6, 8], "respect": 1, "nabla_b": 1, "method": [1, 11, 12], "thi": [1, 6, 8, 11, 12], "i": [1, 3, 6, 11, 12], "done": 1, "appli": 1, "chain": 1, "rule": 1, "error": 1, "from": [1, 3], "output": [1, 5, 6], "input": [1, 3, 5, 6], "ar": [1, 6, 8], "us": [1, 3, 4, 5, 6, 11, 12], "updat": [1, 5, 11], "step": 1, "x": [1, 4, 12], "data": [1, 3, 4, 6, 8, 10, 12], "numpi": 1, "arrai": [1, 4, 6], "row": 1, "repres": [1, 3], "sampl": [1, 12], "column": [1, 3, 8], "featur": [1, 4, 6, 8, 12], "multipli": 1, "previou": 1, "ad": 1, "bia": 1, "It": [1, 3, 6], "get": 1, "current": [1, 11], "These": 1, "repeat": 1, "loss_deriv": [1, 9], "output_activ": 1, "comput": 1, "final": 1, "backpropag": 1, "plot_loss": [1, 9], "plot": [1, 4, 6, 12], "over": 1, "visual": 1, "how": 1, "decreas": 1, "ideal": 1, "time": [1, 3], "tool": 1, "monitor": 1, "process": [1, 6], "diagnos": 1, "issu": 1, "model": [1, 6], "plot_predict": [1, 9], "": [1, 3, 5], "predict": [1, 4, 6, 9, 12], "against": 1, "make": [1, 12], "provid": [1, 3, 4], "comparison": 1, "between": [1, 11], "made": 1, "assess": 1, "where": [1, 3], "given": [1, 4, 12], "dataset": [1, 4, 6, 12], "correspond": [1, 11], "iter": [1, 11], "also": [1, 3], "record": 1, "after": [1, 6], "update_param": [1, 9], "subtract": 1, "portion": 1, "determin": [1, 3], "scale": [1, 6, 8], "leaky_relu": [1, 9], "alpha": 1, "slope": [1, 6], "coeffici": [1, 4, 6, 10, 12], "neg": 1, "an": [1, 3, 4, 5, 6, 11], "element": 1, "itself": 1, "posit": 1, "leaky_relu_deriv": [1, 9], "less": [1, 11], "than": [1, 11], "equal": 1, "otherwis": 1, "1": [1, 6, 11], "rectifi": 1, "unit": 1, "max": 1, "relu_deriv": [1, 9], "greater": 1, "data_clean": [3, 9], "resourc": 3, "clean": 3, "drop": 3, "specif": 3, "round": 3, "close": [3, 8], "4": 3, "decim": 3, "place": [3, 5], "unnecessari": 3, "panda": [3, 8], "datafram": [3, 6, 8], "main": [3, 6], "retriev": 3, "save": 3, "handl": 3, "user": 3, "interv": 3, "period": 3, "csv": 3, "file": 3, "except": 3, "keyboard": 3, "interrupt": 3, "get_filenam": [3, 9], "gener": [3, 6], "filenam": 3, "format": [3, 6], "ng_": 3, "current_d": 3, "todai": 3, "date": 3, "string": 3, "get_float": [3, 9], "prompt": 3, "enter": 3, "point": 3, "valid": 3, "If": 3, "recurs": 3, "again": 3, "displai": [3, 6, 11], "get_int": [3, 9], "integ": 3, "get_interv": [3, 9], "choos": 3, "onli": 3, "accept": 3, "1m": 3, "5m": 3, "etc": 3, "choic": 3, "get_period": [3, 9], "specifi": [3, 6], "indic": [3, 6], "default": [3, 11], "load_data": [3, 9], "load": 3, "offer": 3, "exist": 3, "scrape": 3, "new": [3, 8], "found": 3, "ask": 3, "whether": 3, "option": 3, "bypass": 3, "call": [3, 6], "save_to_csv": [3, 9], "write": 3, "written": 3, "name": 3, "decisiontreenod": [4, 9], "feature_index": 4, "none": [4, 6], "threshold": [4, 6], "left": [4, 5], "right": [4, 5], "decis": [4, 6, 12], "tree": [4, 6, 12], "node": [4, 5], "decisiontreeregressor": [4, 9], "min_samples_split": [4, 12], "2": [4, 12], "max_depth": [4, 12], "fit": [4, 9, 12], "plot_combined_regression_with_decision_tre": [4, 6, 9], "train_data": [4, 6, 10, 12], "test_data": [4, 6, 10, 12], "m": [4, 6, 8, 10, 12], "q": [4, 6, 8, 10, 12], "tree_regressor": [4, 6, 12], "result": [4, 6, 12], "polynomi": [4, 6, 12], "test": [4, 6, 12], "draw_neural_net": [5, 9], "ax": 5, "bottom": 5, "top": 5, "draw": 5, "cartoon": 5, "matplotlib": 5, "center": 5, "leftmost": 5, "here": 5, "rightmost": 5, "bottommost": 5, "topmost": 5, "contain": [5, 6], "draw_updated_neural_net": [5, 9], "input_s": 5, "hidden_s": 5, "output_s": 5, "hidden": 5, "convert_to_binari": [6, 9], "convert": 6, "continu": [6, 11], "binari": 6, "arg": 6, "convers": 6, "run": [6, 11], "differ": 6, "metric": 6, "plot_graph": [6, 9], "graph": 6, "overlaid": 6, "initi": [6, 11], "spinner": [6, 9, 11], "signal": 6, "start": [6, 9, 11], "overlai": 6, "stop": [6, 9, 11], "complet": [6, 11], "line": 6, "intercept": 6, "regressor": [6, 12], "instanc": [6, 12], "note": 6, "assum": 6, "all": [6, 12], "pre": 6, "readi": 6, "ensur": 6, "transform": 6, "appropri": 6, "befor": 6, "them": [6, 12], "design": [6, 9], "separ": 6, "thread": [6, 11], "avoid": 6, "block": 6, "execut": 6, "flow": 6, "while": 6, "being": 6, "polynomial_predict": [6, 9], "numerical_index_sc": [6, 8], "np": 6, "print_section_head": [6, 9], "titl": 6, "print": 6, "header": 6, "section": 6, "str": 6, "index": 7, "modul": [7, 9], "search": 7, "page": 7, "calculate_linear_ms": [8, 9], "feature_sc": [8, 9], "take": 8, "newli": 8, "creat": [8, 12], "numerical_index": 8, "store": [8, 12], "close_sc": 8, "expect": 8, "have": 8, "modifi": 8, "addit": 8, "gradient_desc": [8, 9], "num_iter": 8, "gradient_descent_gpu": [8, 9], "plot_data_linear_regress": [8, 9], "analysi": 9, "artificial_neural_network": 9, "data_scrap": 9, "decision_tree_regress": 9, "forecast": 9, "linear_regress": 9, "polynomial_regress": 9, "calculate_polynomial_ms": [9, 10], "plot_combined_regress": [9, 10], "plot_combined_regression_v2": [9, 10], "plot_data_and_regress": [9, 10], "progress_bar": 9, "init_spin": [9, 11], "random_forest": 9, "randomforestregressor": [9, 12], "plot_combined_regression_with_random_forest": [9, 12], "y_pred_tre": 10, "degre": 10, "delai": 11, "simpl": 11, "consol": 11, "anim": 11, "background": 11, "cycl": 11, "charact": 11, "second": 11, "stop_run": 11, "event": 11, "spin_thread": 11, "until": 11, "set": 11, "begin": 11, "wait": 11, "finish": 11, "progress": 11, "total": 11, "color": 11, "x1b": 11, "33m": 11, "bar": 11, "100": [11, 12], "colorama": 11, "fore": 11, "yellow": 11, "chang": 11, "percentag": 11, "red": 11, "33": 11, "99": 11, "green": 11, "n_estim": 12, "random": 12, "forest": 12, "individu": 12, "bootstrap": 12, "origin": 12, "averag": 12, "which": 12, "forest_regressor": 12}, "objects": {"": [[0, 0, 0, "-", "analysis"], [1, 0, 0, "-", "artificial_neural_network"], [3, 0, 0, "-", "data_scraper"], [4, 0, 0, "-", "decision_tree_regression"], [5, 0, 0, "-", "designer"], [6, 0, 0, "-", "forecaster"], [8, 0, 0, "-", "linear_Regression"], [10, 0, 0, "-", "polynomial_Regression"], [11, 0, 0, "-", "progress_bar"], [12, 0, 0, "-", "random_forest"]], "artificial_neural_network": [[1, 1, 1, "", "ImprovedNeuralNetwork"], [1, 3, 1, "", "leaky_relu"], [1, 3, 1, "", "leaky_relu_derivative"], [1, 3, 1, "", "relu"], [1, 3, 1, "", "relu_derivative"]], "artificial_neural_network.ImprovedNeuralNetwork": [[1, 2, 1, "", "backward"], [1, 2, 1, "", "forward"], [1, 2, 1, "", "loss_derivative"], [1, 2, 1, "", "plot_loss"], [1, 2, 1, "", "plot_predictions"], [1, 2, 1, "", "predict"], [1, 2, 1, "", "train"], [1, 2, 1, "", "update_params"]], "data_scraper": [[3, 3, 1, "", "data_cleaner"], [3, 3, 1, "", "data_scraper"], [3, 3, 1, "", "get_filename"], [3, 3, 1, "", "get_float"], [3, 3, 1, "", "get_int"], [3, 3, 1, "", "get_interval"], [3, 3, 1, "", "get_period"], [3, 3, 1, "", "load_data"], [3, 3, 1, "", "save_to_csv"]], "decision_tree_regression": [[4, 1, 1, "", "DecisionTreeNode"], [4, 1, 1, "", "DecisionTreeRegressor"], [4, 3, 1, "", "plot_combined_regression_with_decision_tree"]], "decision_tree_regression.DecisionTreeRegressor": [[4, 2, 1, "", "fit"], [4, 2, 1, "", "predict"]], "designer": [[5, 3, 1, "", "designer"], [5, 3, 1, "", "draw_neural_net"], [5, 3, 1, "", "draw_updated_neural_net"]], "forecaster": [[6, 3, 1, "", "convert_to_binary"], [6, 3, 1, "", "forecaster"], [6, 3, 1, "", "plot_graph"], [6, 3, 1, "", "polynomial_predictions"], [6, 3, 1, "", "print_section_header"]], "linear_Regression": [[8, 3, 1, "", "calculate_linear_mse"], [8, 3, 1, "", "feature_scaling"], [8, 3, 1, "", "gradient_descent"], [8, 3, 1, "", "gradient_descent_gpu"], [8, 3, 1, "", "plot_data_linear_regression"]], "polynomial_Regression": [[10, 3, 1, "", "calculate_polynomial_mse"], [10, 3, 1, "", "plot_combined_regression"], [10, 3, 1, "", "plot_combined_regression_v2"], [10, 3, 1, "", "plot_data_and_regression"], [10, 3, 1, "", "polynomial_regression"]], "progress_bar": [[11, 1, 1, "", "Spinner"], [11, 3, 1, "", "progress_bar"]], "progress_bar.Spinner": [[11, 2, 1, "", "init_spin"], [11, 2, 1, "", "start"], [11, 2, 1, "", "stop"]], "random_forest": [[12, 1, 1, "", "RandomForestRegressor"], [12, 3, 1, "", "plot_combined_regression_with_random_forest"]], "random_forest.RandomForestRegressor": [[12, 2, 1, "", "fit"], [12, 2, 1, "", "predict"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"]}, "titleterms": {"analysi": 0, "modul": [0, 1, 2, 3, 4, 5, 6, 8, 10, 11, 12], "artificial_neural_network": 1, "conf": 2, "data_scrap": 3, "decision_tree_regress": 4, "design": 5, "forecast": 6, "welcom": 7, "ga": 7, "price": 7, "predict": 7, "": 7, "document": 7, "indic": 7, "tabl": 7, "linear_regress": 8, "ds_gaspricepredict": 9, "polynomial_regress": 10, "progress_bar": 11, "random_forest": 12}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"analysis module": [[0, "module-analysis"]], "artificial_neural_network module": [[1, "module-artificial_neural_network"]], "conf module": [[2, "conf-module"]], "data_scraper module": [[3, "module-data_scraper"]], "decision_tree_regression module": [[4, "module-decision_tree_regression"]], "designer module": [[5, "module-designer"]], "forecaster module": [[6, "module-forecaster"]], "Welcome to Gas Price Prediction\u2019s documentation!": [[7, "welcome-to-gas-price-prediction-s-documentation"]], "Indices and tables": [[7, "indices-and-tables"]], "linear_Regression module": [[8, "module-linear_Regression"]], "DS_GasPricePrediction": [[9, "ds-gaspriceprediction"]], "polynomial_Regression module": [[10, "module-polynomial_Regression"]], "progress_bar module": [[11, "module-progress_bar"]], "random_forest module": [[12, "module-random_forest"]]}, "indexentries": {"analysis": [[0, "module-analysis"]], "module": [[0, "module-analysis"], [1, "module-artificial_neural_network"], [3, "module-data_scraper"], [4, "module-decision_tree_regression"], [5, "module-designer"], [6, "module-forecaster"], [8, "module-linear_Regression"], [10, "module-polynomial_Regression"], [11, "module-progress_bar"], [12, "module-random_forest"]], "improvedneuralnetwork (class in artificial_neural_network)": [[1, "artificial_neural_network.ImprovedNeuralNetwork"]], "artificial_neural_network": [[1, "module-artificial_neural_network"]], "backward() (artificial_neural_network.improvedneuralnetwork method)": [[1, "artificial_neural_network.ImprovedNeuralNetwork.backward"]], "forward() (artificial_neural_network.improvedneuralnetwork method)": [[1, "artificial_neural_network.ImprovedNeuralNetwork.forward"]], "leaky_relu() (in module artificial_neural_network)": [[1, "artificial_neural_network.leaky_relu"]], "leaky_relu_derivative() (in module artificial_neural_network)": [[1, "artificial_neural_network.leaky_relu_derivative"]], "loss_derivative() (artificial_neural_network.improvedneuralnetwork method)": [[1, "artificial_neural_network.ImprovedNeuralNetwork.loss_derivative"]], "plot_loss() (artificial_neural_network.improvedneuralnetwork method)": [[1, "artificial_neural_network.ImprovedNeuralNetwork.plot_loss"]], "plot_predictions() (artificial_neural_network.improvedneuralnetwork method)": [[1, "artificial_neural_network.ImprovedNeuralNetwork.plot_predictions"]], "predict() (artificial_neural_network.improvedneuralnetwork method)": [[1, "artificial_neural_network.ImprovedNeuralNetwork.predict"]], "relu() (in module artificial_neural_network)": [[1, "artificial_neural_network.relu"]], "relu_derivative() (in module artificial_neural_network)": [[1, "artificial_neural_network.relu_derivative"]], "train() (artificial_neural_network.improvedneuralnetwork method)": [[1, "artificial_neural_network.ImprovedNeuralNetwork.train"]], "update_params() (artificial_neural_network.improvedneuralnetwork method)": [[1, "artificial_neural_network.ImprovedNeuralNetwork.update_params"]], "data_cleaner() (in module data_scraper)": [[3, "data_scraper.data_cleaner"]], "data_scraper": [[3, "module-data_scraper"]], "data_scraper() (in module data_scraper)": [[3, "data_scraper.data_scraper"]], "get_filename() (in module data_scraper)": [[3, "data_scraper.get_filename"]], "get_float() (in module data_scraper)": [[3, "data_scraper.get_float"]], "get_int() (in module data_scraper)": [[3, "data_scraper.get_int"]], "get_interval() (in module data_scraper)": [[3, "data_scraper.get_interval"]], "get_period() (in module data_scraper)": [[3, "data_scraper.get_period"]], "load_data() (in module data_scraper)": [[3, "data_scraper.load_data"]], "save_to_csv() (in module data_scraper)": [[3, "data_scraper.save_to_csv"]], "decisiontreenode (class in decision_tree_regression)": [[4, "decision_tree_regression.DecisionTreeNode"]], "decisiontreeregressor (class in decision_tree_regression)": [[4, "decision_tree_regression.DecisionTreeRegressor"]], "decision_tree_regression": [[4, "module-decision_tree_regression"]], "fit() (decision_tree_regression.decisiontreeregressor method)": [[4, "decision_tree_regression.DecisionTreeRegressor.fit"]], "plot_combined_regression_with_decision_tree() (in module decision_tree_regression)": [[4, "decision_tree_regression.plot_combined_regression_with_decision_tree"]], "predict() (decision_tree_regression.decisiontreeregressor method)": [[4, "decision_tree_regression.DecisionTreeRegressor.predict"]], "designer": [[5, "module-designer"]], "designer() (in module designer)": [[5, "designer.designer"]], "draw_neural_net() (in module designer)": [[5, "designer.draw_neural_net"]], "draw_updated_neural_net() (in module designer)": [[5, "designer.draw_updated_neural_net"]], "convert_to_binary() (in module forecaster)": [[6, "forecaster.convert_to_binary"]], "forecaster": [[6, "module-forecaster"]], "forecaster() (in module forecaster)": [[6, "forecaster.forecaster"]], "plot_graph() (in module forecaster)": [[6, "forecaster.plot_graph"]], "polynomial_predictions() (in module forecaster)": [[6, "forecaster.polynomial_predictions"]], "print_section_header() (in module forecaster)": [[6, "forecaster.print_section_header"]], "calculate_linear_mse() (in module linear_regression)": [[8, "linear_Regression.calculate_linear_mse"]], "feature_scaling() (in module linear_regression)": [[8, "linear_Regression.feature_scaling"]], "gradient_descent() (in module linear_regression)": [[8, "linear_Regression.gradient_descent"]], "gradient_descent_gpu() (in module linear_regression)": [[8, "linear_Regression.gradient_descent_gpu"]], "linear_regression": [[8, "module-linear_Regression"]], "plot_data_linear_regression() (in module linear_regression)": [[8, "linear_Regression.plot_data_linear_regression"]], "calculate_polynomial_mse() (in module polynomial_regression)": [[10, "polynomial_Regression.calculate_polynomial_mse"]], "plot_combined_regression() (in module polynomial_regression)": [[10, "polynomial_Regression.plot_combined_regression"]], "plot_combined_regression_v2() (in module polynomial_regression)": [[10, "polynomial_Regression.plot_combined_regression_v2"]], "plot_data_and_regression() (in module polynomial_regression)": [[10, "polynomial_Regression.plot_data_and_regression"]], "polynomial_regression": [[10, "module-polynomial_Regression"]], "polynomial_regression() (in module polynomial_regression)": [[10, "polynomial_Regression.polynomial_regression"]], "spinner (class in progress_bar)": [[11, "progress_bar.Spinner"]], "init_spin() (progress_bar.spinner method)": [[11, "progress_bar.Spinner.init_spin"]], "progress_bar": [[11, "module-progress_bar"]], "progress_bar() (in module progress_bar)": [[11, "progress_bar.progress_bar"]], "start() (progress_bar.spinner method)": [[11, "progress_bar.Spinner.start"]], "stop() (progress_bar.spinner method)": [[11, "progress_bar.Spinner.stop"]], "randomforestregressor (class in random_forest)": [[12, "random_forest.RandomForestRegressor"]], "fit() (random_forest.randomforestregressor method)": [[12, "random_forest.RandomForestRegressor.fit"]], "plot_combined_regression_with_random_forest() (in module random_forest)": [[12, "random_forest.plot_combined_regression_with_random_forest"]], "predict() (random_forest.randomforestregressor method)": [[12, "random_forest.RandomForestRegressor.predict"]], "random_forest": [[12, "module-random_forest"]]}})